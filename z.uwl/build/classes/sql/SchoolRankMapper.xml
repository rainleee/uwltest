<?xml version="1.0" encoding="UTF-8" ?>

<!DOCTYPE mapper
		PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
		"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="SchoolRankMapper">

	<resultMap id="schoolRankSelectMap" type="schoolRank">
		
		<result property="user.userId" 			column="user_id" 			jdbcType="VARCHAR"/>
		
		<result property="schoolNo" 			column="school_no" 			jdbcType="NUMERIC"/>
		<result property="schoolName" 			column="school_name" 			jdbcType="VARCHAR"/>
		<result property="schoolAddress" 			column="school_address" 			jdbcType="NUMERIC"/>
		<result property="ranking" 					column="ranking" 		jdbcType="NUMERIC" />
		<result property="totalUser" 			column="total_user" 			jdbcType="NUMERIC"/>
		<result property="totalActivityPoint" 	column="total_activity_point" 		jdbcType="NUMERIC" />
	</resultMap>
	
	<insert 	id="addSchoolRank"		parameterType="schoolRank" >
		INSERT INTO school_rank(school_no, school_name, school_address) 
						VALUES (#{schoolNo}, #{schoolName},#{schoolAddress})
	 </insert>
	 
	 <update	id="updateSchoolRank"	parameterType="schoolRank" >
	  	 UPDATE school_rank 
		<set>
			total_user = total_user  + 1,
			total_activity_point = (SELECT sum(sum_table.variable_activity_point)  
		FROM (SELECT  u.school_no, r.variable_activity_point FROM reward r, users u WHERE r.user_id = u.user_id AND u.school_no = #{schoolNo}) sum_table)
		</set>
		WHERE school_no = #{schoolNo}
	 </update>
	 
	
	<!-- SELECT LIST RANKING 조회 -->
	<select  id="getSchoolRankingList"  parameterType="search"	resultMap="schoolRankSelectMap">
	  	 SELECT *
	  	FROM (	SELECT  ROWNUM AS row_seq,
						inner_table.ranking,
						inner_table.school_no,
						inner_table.school_name,
						inner_table.school_address,
						inner_table.total_user,
						inner_table.total_activity_point
 					FROM ( 	SELECT RANK() OVER (ORDER BY total_activity_point DESC) ranking,
								school_no,
								school_name,
								school_address,
								total_user,
								total_activity_point
								FROM school_rank
							<if test="searchCondition != null">
								<where>
									<if test="searchCondition == 1 and searchKeyword !='' ">
							 			school_name LIKE '%'||#{searchKeyword}||'%'
									</if>
									<if test="searchCondition == 2 and searchKeyword !='' ">
							 			school_address LIKE '%'||#{searchKeyword}||'%'
									</if>
								</where>
							</if>) inner_table
				WHERE ROWNUM &lt;= #{endRowNum:INTEGER} )
				WHERE row_seq BETWEEN #{startRowNum:INTEGER} AND #{endRowNum:INTEGER} 
	 </select>
	 
	 <!-- SQL : SELECT ONE  -->
	 <select  id="getSearchRank"  parameterType="int"	resultMap="schoolRankSelectMap">
	  	 SELECT school_no,
				school_name,
				school_address,
				total_user,
				total_activity_point
		FROM school_rank
		WHERE school_no = #{value}
	 </select>
	 
	 <!-- SQL : SELECT ROW Count -->	 
	 <select  id="getTotalCount"  parameterType="search"	 resultType="int">
	  	 SELECT COUNT(*)
	  	FROM (	SELECT  ROWNUM AS row_seq,
 									inner_table.ranking,
 									inner_table.school_no,
 									inner_table.school_name,
 									inner_table.school_address,
 									inner_table.total_user,
 									inner_table.total_activity_point
				FROM ( 	SELECT RANK() OVER (ORDER BY total_activity_point DESC) ranking,
						school_no,
						school_name,
						school_address,
						total_user,
						total_activity_point
						FROM school_rank
					<if test="searchCondition != null">
						<where><!-- 1:학교이름, 2: 학교주소, 3: 총활동점수가 키워드보다 높은경우 -->
							<if test="searchCondition == 1 and searchKeyword !='' ">
					 			school_name LIKE '%'||#{searchKeyword}||'%'
							</if>
							<if test="searchCondition == 2 and searchKeyword !='' ">
					 			school_address LIKE '%'||#{searchKeyword}||'%'
							</if>
						</where>
					</if>) inner_table
		WHERE ROWNUM &lt;= #{endRowNum:INTEGER} )
		WHERE row_seq BETWEEN #{startRowNum:INTEGER} AND #{endRowNum:INTEGER} 
	 </select>
	 
 	
</mapper>